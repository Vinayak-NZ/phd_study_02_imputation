subset_data <- post_locf[, c("unique_id",
"randomisation",
"age_cat",
"sex",
"education_cat",
"selfcare_t0",
"selfcare_t1",
"selfcare_t2")]
subset_data <- subset_data[complete.cases(subset_data), ]
setDT(subset_data)
long_data <- melt(subset_data,
id.vars = c("unique_id",
"randomisation",
"age_cat",
"sex",
"education_cat"),
variable.name = "time",
value.name = "selfcare")
long_data[, "time"] <- ifelse(long_data[, "time"] == "selfcare_t0",
"baseline",
ifelse(long_data[, "time"] == "selfcare_t1",
"week-12",
"week-24"))
# interaction effect
interaction.lmer <- lmer(selfcare ~ randomisation + time + randomisation*time +
age_cat + sex +
education_cat + (1|unique_id),
data = long_data,
REML = F)
interaction_model <- summary(interaction.lmer)
confint(interaction.lmer)
source("R/00_load_functions.R")
source("R/00_load_package.R")
source("R/01_load_data.R")
source("R/02_data_edit.R")
source("R/03_create_synthetic_data.R")
source("R/04_simulate_missingness.R")
source("R/08_visualise_socio_demographics.R")
ggplot(data = subset_data_sex, aes(x = sex, fill = sex)) +
geom_bar(key_glyph = draw_key_blank) +
labs(title = paste0("Sex"),
subtitle = "Bar chart of sex distribution in sample",
caption = "Data source: Cardiovascular Rehabilitation Tool") +
xlab("Sex") +
ylab("Count") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.position = "none")
# sex
subset_data_sex <- subset_data
subset_data_sex$sex <- ifelse(subset_data_sex$sex == 1, "Female", "Male")
ggplot(data = subset_data_sex, aes(x = sex, fill = sex)) +
geom_bar(key_glyph = draw_key_blank) +
labs(title = paste0("Characteristics of sample"),
subtitle = "Bar chart of sex distribution in sample",
caption = "Data source: Cardiovascular Rehabilitation Tool") +
xlab("Sex") +
ylab("Count") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.position = "none")
socio_demo_sex <-
ggplot(data = subset_data_sex, aes(x = sex, fill = sex)) +
geom_bar(key_glyph = draw_key_blank) +
labs(title = paste0("Characteristics of sample"),
subtitle = "Bar chart of sex distribution in sample",
caption = "Data source: Cardiovascular Rehabilitation Tool") +
xlab("Sex") +
ylab("Count") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.position = "none")
ggsave("output/socio_demo_sex.png", plot = socio_demo_sex)
source("R/08_visualise_socio_demographics.R")
table(subset_data$sex)
24/40
mean(subset_data$age)
table(subset_data$heart_disease)
16/24
16/40
table(subset_data$heart_failure)
7/40
source("R/08_visualise_data_comparisons.R")
# education
subset_data_education <- subset_data
subset_data_education$education_cat <-
ifelse(subset_data_education$education_cat == 1,
"L1",
ifelse(subset_data_education$education_cat == 2,
"L2", "L3"))
synthetic_data_education <- synthetic_data
synthetic_data_education$education_cat <-
ifelse(synthetic_data_education$education_cat == 1,
"L1",
ifelse(synthetic_data_education$education_cat == 2,
"L2", "L3"))
synthetic_data_education <- synthetic_data_subset
synthetic_data_education$education_cat <-
ifelse(synthetic_data_education$education_cat == 1,
"L1",
ifelse(synthetic_data_education$education_cat == 2,
"L2", "L3"))
raw_table_education <- as.data.frame(prop.table(table(subset_data_education$education_cat)))
synthetic_table_education <- as.data.frame(prop.table(table(synthetic_data_education$education_cat)))
table_education <- rbind(raw_table_education, synthetic_table_education)
names(table_education)[names(table_education) == "Var1"] <- "Education"
names(table_education)[names(table_education) == "Freq"] <- "Proportion"
table_education$data_source <- c("Raw data", "Raw data", "Raw data", "Synthetic data", "Synthetic data", "Synthetic data")
labels <- c(L1 = 'L1 = Secondary/ elementary school',
L2 = 'L2 = University degree - Polytechnic',
L3 = 'L3 = University degree')
data_compare_education <-
ggplot(table_education, aes(fill=Education, y=Proportion, x=data_source)) +
geom_bar(position="stack", stat="identity") +
scale_fill_manual(values = c("#e18b22", "#46e7fd", "#4739a2"), labels = labels) +
labs(title = paste0("Comparing Synthetic and Raw data"),
subtitle = "Bar chart of education attainment in datasets",
caption = "Data source: Cardiovascular Rehabilitation Tool") +
xlab("Education") +
ylab("Percentage composition") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"))
ggsave("output/data_compare_education.png",
plot = data_compare_education)
subset_data_age <- subset_data
subset_data_age$age_cat <-
ifelse(subset_data_age$age_cat == 1,
"<= 50",
ifelse(subset_data_age$age_cat == 2,
"51 - 60", ifelse(subset_data_age$age_cat == 3, "61 - 70", "70+")))
synthetic_data_age <- synthetic_data_subset
synthetic_data_age$age_cat <-
ifelse(synthetic_data_age$age_cat == 1,
"<= 50",
ifelse(synthetic_data_age$age_cat == 2,
"51 - 60", ifelse(synthetic_data_age$age_cat == 3, "61 - 70", "70+")))
raw_table_age <- as.data.frame(prop.table(table(subset_data_age$age_cat)))
synthetic_table_age <- as.data.frame(prop.table(table(synthetic_data_age$age_cat)))
table_age <- rbind(raw_table_age, synthetic_table_age)
names(table_age)[names(table_age) == "Var1"] <- "Age"
names(table_age)[names(table_age) == "Freq"] <- "Proportion"
table_age$data_source <- c("Raw data",
"Raw data",
"Raw data",
"Raw data",
"Synthetic data",
"Synthetic data",
"Synthetic data",
"Synthetic data")
data_compare_age <-
ggplot(table_age, aes(fill=Age, y=Proportion, x=data_source)) +
geom_bar(position="stack", stat="identity") +
scale_fill_manual(values = c("#e18b22", "#46e7fd", "#4739a2", "#f2e4d3")) +
labs(title = paste0("Comparing Synthetic and Raw data"),
subtitle = "Bar chart of age distribution in datasets",
caption = "Data source: Cardiovascular Rehabilitation Tool") +
xlab("Age") +
ylab("Percentage composition") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"))
ggsave("output/data_compare_age.png",
plot = data_compare_age)
subset_data_selfcare <- subset_data[, c("randomisation", "sex", "age_cat","education_cat",
"hypertension", "heart_disease", "heart_failure",
"selfcare_t0", "physical_activity_t0")]
subset_data_selfcare$data_source <- "Raw data"
synthetic_data_selfcare <- subset_data[, c("randomisation", "sex", "age_cat","education_cat",
"hypertension", "heart_disease", "heart_failure",
"selfcare_t0", "physical_activity_t0")]
synthetic_data_selfcare$data_source <- "Synthetic data"
data_binded_selfcare <- rbind(subset_data_selfcare, synthetic_data_selfcare)
data_compare_selfcare <-
ggplot(data_binded_selfcare, aes(x=data_source, y = selfcare_t0, fill = data_source)) +
geom_boxplot() +
scale_fill_manual(values = c("#e18b22", "#46e7fd")) +
labs(title = paste0("Disease self-management"),
subtitle = "Boxplot of distribution for selfcare scores",
caption = "Data source: Cardiovascular Rehabilitation Tool",
fill = "Data Source") +
xlab("Data Source") +
ylab("Selfcare scores") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.position = "none")
ggsave("output/data_compare_selfcare.png",
plot = data_compare_selfcare)
subset_data_physical_activity <- subset_data[, c("randomisation", "sex", "age_cat","education_cat",
"hypertension", "heart_disease", "heart_failure",
"selfcare_t0", "physical_activity_t0")]
subset_data_physical_activity$data_source <- "Raw data"
synthetic_data_physical_activity <- subset_data[, c("randomisation", "sex", "age_cat","education_cat",
"hypertension", "heart_disease", "heart_failure",
"selfcare_t0", "physical_activity_t0")]
synthetic_data_physical_activity$data_source <- "Synthetic data"
data_binded_physical_activity <- rbind(subset_data_physical_activity, synthetic_data_physical_activity)
data_compare_physical_activity <-
ggplot(data_binded_physical_activity, aes(x=data_source, y = physical_activity_t0, fill = data_source)) +
geom_boxplot() +
scale_fill_manual(values = c("#e18b22", "#46e7fd")) +
labs(title = paste0("Physical activity"),
subtitle = "Boxplot of distribution for physical activity",
caption = "Data source: Cardiovascular Rehabilitation Tool",
fill = "Data Source") +
xlab("Data Source") +
ylab("IPAQ scores") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"),
legend.position = "none")
ggsave("output/data_compare_physical_activity.png",
plot = data_compare_physical_activity)
source("R/08_visualise_data_comparisons.R")
source("R/08_visualise_missingness.R")
source("R/08_visualise_data_comparisons.R")
source("R/08_visualise_missingness.R")
source("R/08_visualise_missingness.R")
missingness_plot <-
ggplot(missing_data_table, aes(fill=Variable, y=Missing, x=Time)) +
geom_bar(position="dodge", stat="identity") +
scale_fill_manual(values = c("#e18b22", "#46e7fd")) +
facet_wrap(~Randomisation) +
labs(title = paste0("Missing data simulation"),
subtitle = "Bar chart of missingness simulated in synthetic data",
caption = "Data source: Cardiovascular Rehabilitation Tool") +
xlab("Time") +
ylab("Percentage missing") +
ylim(0, 100) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"))
ggsave("output/missingness_plot.png",
plot = missingness_plot)
typeof(missing_data_table$Missing)
missing_data_table <- as.data.frame(cbind(Randomisation,
Variable,
Time,
as.numeric(Missing)))
missing_data_table$Time <- factor(missing_data_table$Time, levels=c('Baseline',
'12-week',
'24-week'))
missingness_plot <-
ggplot(missing_data_table, aes(fill=Variable, y=Missing, x=Time)) +
geom_bar(position="dodge", stat="identity") +
scale_fill_manual(values = c("#e18b22", "#46e7fd")) +
facet_wrap(~Randomisation) +
labs(title = paste0("Missing data simulation"),
subtitle = "Bar chart of missingness simulated in synthetic data",
caption = "Data source: Cardiovascular Rehabilitation Tool") +
xlab("Time") +
ylab("Percentage missing") +
ylim(0, 100) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"),
plot.title = element_text(color = "#2F2E41", size = 12, face = "bold"),
plot.subtitle = element_text(color = "#454543"),
plot.caption = element_text(color = "#454543", face = "italic"))
ggsave("output/missingness_plot.png",
plot = missingness_plot)
source("R/00_load_functions.R")
source("R/00_load_package.R")
source("R/01_load_data.R")
source("R/02_data_edit.R")
source("R/03_create_synthetic_data.R")
source("R/04_simulate_missingness.R")
source("R/05_imputation_J2R.R")
j2r_selfcare_t1 <- evaluate_unit_record_rmse(observed_data = synthetic_data_subset,
predicted_data = j2r_imputed_single_sc,
observed_var = "selfcare_t1",
predicted_var = "selfcare_t1_imp")
j2r_selfcare_t2 <- evaluate_unit_record_rmse(observed_data = synthetic_data_subset,
predicted_data = j2r_imputed_single_sc,
observed_var = "selfcare_t2",
predicted_var = "selfcare_t2_imp")
j2r_physical_activity_t1 <- evaluate_unit_record_rmse(observed_data = synthetic_data_subset,
predicted_data = j2r_imputed_single_pa,
observed_var = "physical_activity_t1",
predicted_var = "selfcare_t1_imp")
j2r_physical_activity_t1 <- evaluate_unit_record_rmse(observed_data = synthetic_data_subset,
predicted_data = j2r_imputed_single_pa,
observed_var = "physical_activity_t1",
predicted_var = "physical_activity_t1_imp")
j2r_physical_activity_t2 <- evaluate_unit_record_rmse(observed_data = synthetic_data_subset,
predicted_data = j2r_imputed_single_pa,
observed_var = "physical_activity_t2",
predicted_var = "physical_activity_t2_imp")
j2r_selfcare_t1
j2r_selfcare_t2
j2r_physical_activity_t1
j2r_physical_activity_t2
source("R/05_imputation_MICE.R")
mice_selfcare_t1 <- evaluate_unit_record_rmse(observed_data = synthetic_data_subset,
predicted_data = data_mice,
observed_var = "selfcare_t1",
predicted_var = "selfcare_t1_imp")
mice_selfcare_t2 <- evaluate_unit_record_rmse(observed_data = synthetic_data_subset,
predicted_data = data_mice,
observed_var = "selfcare_t2",
predicted_var = "selfcare_t2_imp")
mice_physical_activity_t1 <- evaluate_unit_record_rmse(observed_data = synthetic_data_subset,
predicted_data = data_mice,
observed_var = "physical_activity_t1",
predicted_var = "physical_activity_t1_imp")
mice_physical_activity_t2 <- evaluate_unit_record_rmse(observed_data = synthetic_data_subset,
predicted_data = data_mice,
observed_var = "physical_activity_t2",
predicted_var = "physical_activity_t2_imp")
mice_selfcare_t1
mice_selfcare_t2
mice_physical_activity_t1
mice_physical_activity_t2
source("R/05_imputation_LOCF.R")
locf_selfcare_t1 <- evaluate_unit_record_rmse(observed_data = synthetic_data_subset,
predicted_data = post_locf,
observed_var = "selfcare_t1",
predicted_var = "selfcare_t1")
locf_selfcare_t2 <- evaluate_unit_record_rmse(observed_data = synthetic_data_subset,
predicted_data = post_locf,
observed_var = "selfcare_t2",
predicted_var = "selfcare_t2")
locf_physical_activity_t1 <- evaluate_unit_record_rmse(observed_data = synthetic_data_subset,
predicted_data = post_locf,
observed_var = "physical_activity_t1",
predicted_var = "physical_activity_t1")
locf_physical_activity_t2 <- evaluate_unit_record_rmse(observed_data = synthetic_data_subset,
predicted_data = post_locf,
observed_var = "physical_activity_t2",
predicted_var = "physical_activity_t2")
locf_selfcare_t1
locf_selfcare_t2
locf_physical_activity_t1
locf_physical_activity_t2
View(raw_data)
source("R/05_imputation_J2R.R")
source("R/06_modelling_J2R.R")
typeof(pooled_output)
typeof(pooled_output[[1]])
typeof(models)
typeof(models[[1]])
models[[1]]
# self-care
RMSE.merMod(models[[1]])
models_rmse <- list()
M <- length(bootImps_pa)
for (mm in 1:M){
models[[mm]] <- lme4::lmer(formula, data = bootImps_pa[[mm]], REML=FALSE)
models_rmse[[mm]] <- RMSE.merMod(models[[mm]])
}
models_rmse_vector <- unlist(models_rmse, use.names=FALSE)
median(models_rmse_vector)
source("R/06_modelling_J2R.R")
source("R/05_imputation_J2R.R")
for (i in 1:length(bootImps_sc)){
bootImps_sc[[i]] <- bootImps_sc[[i]][, c("unique_id",
"randomisation",
"age_cat",
"sex",
"education_cat",
"selfcare_t0",
"selfcare_t1",
"selfcare_t2")]
setDT(bootImps_sc[[i]])
bootImps_sc[[i]] <- melt(bootImps_sc[[i]],
id.vars = c("unique_id",
"randomisation",
"age_cat",
"sex",
"education_cat"),
variable.name = "time",
value.name = "selfcare")
bootImps_sc[[i]][, "time"] <- ifelse(bootImps_sc[[i]][, "time"] == "selfcare_t0",
"baseline",
ifelse(bootImps_sc[[i]][, "time"] == "selfcare_t1",
"week-12",
"week-24"))
bootImps_sc[[i]]$time <- as.factor(bootImps_sc[[i]]$time)
bootImps_sc[[i]]$selfcare <- abs(as.numeric(bootImps_sc[[i]]$selfcare))
bootImps_sc[[i]] <- as.data.frame(bootImps_sc[[i]])
}
formula <- selfcare ~ randomisation + time + randomisation*time +
age_cat + sex +
education_cat + (1|unique_id)
models_sc <- list()
models_rmse_sc <- list()
M <- length(bootImps_sc)
for (mm in 1:M){
models_sc[[mm]] <- lme4::lmer(formula, data = bootImps_sc[[mm]], REML=FALSE)
models_rmse_sc[[mm]] <- RMSE.merMod(models_sc[[mm]])
}
pooled_results_sc <- lmer_pool(models_sc, level = .95)
pooled_output_sc <- summary(pooled_results_sc)
models_rmse_vector_sc <- unlist(models_rmse_sc, use.names=FALSE)
for (i in 1:length(bootImps_pa)){
bootImps_pa[[i]] <- bootImps_pa[[i]][, c("unique_id",
"randomisation",
"age_cat",
"sex",
"education_cat",
"physical_activity_t0",
"physical_activity_t1",
"physical_activity_t2")]
setDT(bootImps_pa[[i]])
bootImps_pa[[i]] <- melt(bootImps_pa[[i]],
id.vars = c("unique_id",
"randomisation",
"age_cat",
"sex",
"education_cat"),
variable.name = "time",
value.name = "physical_activity")
bootImps_pa[[i]][, "time"] <- ifelse(bootImps_pa[[i]][, "time"] == "physical_activity_t0",
"baseline",
ifelse(bootImps_pa[[i]][, "time"] == "physical_activity_t1",
"week-12",
"week-24"))
bootImps_pa[[i]]$time <- as.factor(bootImps_pa[[i]]$time)
bootImps_pa[[i]]$physical_activity <- abs(as.numeric(bootImps_pa[[i]]$physical_activity))
bootImps_pa[[i]] <- as.data.frame(bootImps_pa[[i]])
}
formula <- physical_activity ~ randomisation + time + randomisation*time +
age_cat + sex +
education_cat + (1|unique_id)
models_pa <- list()
models_rmse_pa <- list()
M <- length(bootImps_pa)
for (mm in 1:M){
models_pa[[mm]] <- lme4::lmer(formula, data = bootImps_pa[[mm]], REML=FALSE)
models_rmse_pa[[mm]] <- RMSE.merMod(models_pa[[mm]])
}
pooled_results <- lmer_pool(models_pa, level = .95)
pooled_output <- summary(pooled_results)
models_rmse_vector_pa <- unlist(models_rmse_pa, use.names=FALSE)
source("R/05_imputation_J2R.R")
source("R/06_modelling_J2R.R")
# self-care
median(models_rmse_vector_sc)
# physical-activity
median(models_rmse_vector_pa)
source("R/05_imputation_MICE.R")
source("R/06_modelling_MICE.R")
# self-care
median(mice_models_rmse_vector_sc)
# physical-activity
median(mice_models_rmse_vector_pa)
source("R/05_imputation_LOCF.R")
source("R/06_modelling_LOCF.R")
# self-care
median(locf_model_sc)
# self-care
RMSE.merMod(locf_model_sc)
# physical-activity
RMSE.merMod(locf_model_pa)
## ---- list-wise-deletion
source("R/06_modelling_LWD.R")
# self-care
RMSE.merMod(lwd_model_sc)
# physical-activity
RMSE.merMod(lwd_model_pa)
models_rmse_vector_sc
citation()
RStudio.Version()
install.packages("knitr")
# List of packages
packages <- c("synthpop", "ggplot2", "mice")
# Function to get citation in APA format
get_ap_citation <- function(pkg) {
citation_info <- citation(pkg)
authors <- paste(citation_info$author, collapse = ", ")
year <- format(citation_info$year)
title <- citation_info$title
version <- citation_info$version
url <- citation_info$url
paste(authors, "(", year, ").", title, "(Version", version, ") [R package].", url)
}
# Generate APA citations
citations <- sapply(packages, get_ap_citation)
# Print citations
cat(citations, sep = "\n\n")
citation("synthpop")
citation("ggplot2")
citation("mice")
citation("sjmisc")
citation("mlmi")
citation("data.table")
citation("miceadds")
citation("sirt")
citation("broom.mixed")
citation("lme4")
citation("patchwork")
citation("naniar")
citation("merTools")
